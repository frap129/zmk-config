/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {

    behaviors {
        lrs: layers {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERS";
            #binding-cells = <0>;
            bindings = <&mo LOWER>, <&mo RAISE>, <&mo ADJUST>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        ccs: ctrl-ctrl-shift {
            compatible = "zmk,behavior-tap-dance"
            label = "CTRL_CTRL_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LS(LCTRL)>;

        };
        stc: shift_tab_control {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_TAB_CONTROL";
            #binding-cells = <0>;
            bindings = <&gqt RSHFT TAB>, <&kp RCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
//        ----------------------------------------                                     ---------------------------------------------
//       |   1   |  2  |  3  |  4   |  5   |  =   |                                   |  -   |  6    |  7    |  8   |   9   |   0   |
//       |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                   |  Y   |  U    |  I    |  O   |   P   |   \   |
//       |  ALT  |  A  |  S  |  D   |  F   |  G   |________                    _______|  H   |  J    |  K    |  L   |   ;   |   '   |
//       |   `   |  Z  |  X  |  C   |  V   |  B   |  MUTE  |                  |  PP   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | GUI | ALT  | LGUI | SPACE|  BKSPC |                |SHIFT/TAB| RET  | CTRL  | ALT   | GUI  |
            bindings = <
        &kp N1    &kp N2 &kp N3 &kp N4 &kp N5 &kp EQUAL                      &kp MINUS &kp N6 &kp N7    &kp N8   &kp N9   &kp N0
        &kp ESC   &kp Q  &kp W  &kp E  &kp R  &kp T                          &kp Y     &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &kp LALT  &kp A  &kp S  &kp D  &kp F  &kp G                          &kp H     &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp GRAVE &kp Z  &kp X  &kp C  &kp V  &kp B &kp C_MUTE      &kp K_PP &kp N     &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
               &kp LGUI &kp LS(LGUI) &ccs &kp SPACE &gqt LGUI BSPC  &stc     &kp RET &lrs &kp LBKT  &kp RBKT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp LEFT  &kp DOWN &kp UP          &kp RIGHT &none     &none
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &none     &trans    &none    &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &none   &none
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

// ------------------------------------------------------------------------------------------------------------
// |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
// |EXTPWR|RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
// |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
// |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
//                |       |       |       |       |       | |      |      |      |       |      |

        Adjust_layer {
        bindings = <
&bt BT_CLR                      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                                    &trans &trans &trans &trans &trans &trans
&ext_power EXT_POWER_TOGGLE_CMD &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                                 &trans &trans &trans &trans &trans &trans
&trans                           &rgb_ug RGB_BRD &rgb_ug RGB_BRI &trans           &trans           &trans                                           &trans &trans &trans &trans &trans &trans
&trans                           &trans           &trans           &trans           &trans           &trans               &rgb_ug RGB_TOG  &trans      &trans &trans &trans &trans &trans &trans
                                                &trans           &trans           &trans           &trans               &trans            &trans      &trans &trans &trans &trans
        >;
        };

    };
};
